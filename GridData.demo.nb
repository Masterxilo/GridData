(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    119028,       3095]
NotebookOptionsPosition[    111146,       2840]
NotebookOutlinePosition[    111490,       2855]
CellTagsIndexPosition[    111447,       2852]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Extending an image into 3D", "Title",
 CellChangeTimes->{{3.679306513313686*^9, 3.679306518685418*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "paul`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "GridData`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"UnprotectClearAll", "[", 
  RowBox[{"d", ",", "oc"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"GridDataMakeFromImage", "@", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
       "], {{0, 100}, {100, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{100, 100},
     PlotRange->{{0, 100}, {0, 100}}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"oc", "=", 
  RowBox[{"GDCoordinateBounds", "@", "d"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"GDAppendDimension", "[", "d", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "//", "GDToImage3D"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2", "=", 
     RowBox[{"GDNearestFilter", "[", 
      RowBox[{"d", ",", 
       RowBox[{"oc", "~", "Append", "~", 
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}]}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"takes", " ", "forever"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"d2", "//", "GDToImage3D"}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d3", "=", 
   RowBox[{"GDCopy", "[", 
    RowBox[{"d", ",", 
     RowBox[{"oc", "~", "Append", "~", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"d3", "//", "GDToImage3D"}]}], "Input",
 CellChangeTimes->{{3.679306533659357*^9, 3.679306562548805*^9}, {
   3.6793141591230993`*^9, 3.679314164224469*^9}, {3.6793142543750405`*^9, 
   3.6793142609462643`*^9}, {3.680248310760043*^9, 3.680248316366035*^9}, {
   3.6802483844029093`*^9, 3.68024842983258*^9}, {3.680248652636589*^9, 
   3.6802486601279364`*^9}, 3.6802488866586094`*^9, 3.6803679946504927`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "100"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6793065219795437`*^9, {3.679306555449281*^9, 3.6793065631581497`*^9}, {
   3.679314127552676*^9, 3.6793141650324783`*^9}, {3.679314261498935*^9, 
   3.679314276029079*^9}, 3.6802484378606157`*^9, 3.680248533061387*^9, 
   3.680248567902861*^9, 3.6802486670946474`*^9, 3.680248798511607*^9, {
   3.6802488718971767`*^9, 3.680248887107155*^9}, 3.680367758031793*^9, 
   3.6803678388379683`*^9, 3.6803679903347397`*^9, 3.680368028594588*^9}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJzt19uN1EAQBdBBIgFCIBJyIAQE38RGZoTA0x+UXPTYY7va3aekVenq3B3t
zNhr+/2nrx+/vH08Hp///rz5+fMr/5nvH9Y355xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc8455/x5j5P1W6/b6/vjnHPOOeec
9+Nxsn7rdXt9f5xzzjnnnPPrPE7WP8ur3z/nnHPOOef8OI+T9Xv16s+Pc845
55xz/rzHyfq9evXnxznnnHPO+UweJ+vP6tXfD+ecc8455yN5nKw/q1d/P5xz
zjnnnN/J42R9vs+rv1/OOeecc86v9DhZn5/j1d8/55xzzjnnR3qcrM/79Orj
h3POOeec87Wc/R6/t1cfX5xzzjnnfC6Pk/X5nF59fHLOOeec83t5nKzP+ZpX
H7+cc8455/xeHifrc77Hq49vzjnnnHN+rcfJ+pxXePX5wTnnnHPOt3mcrM95
j159/nDOOeec8/Ve9ntZn/MRvNfzk3POOV/z2JPlkXLreOd8BO9tt/7Os90+
dy/DOeeZx54sz5Rb5wPnI7htX7mX4ZzzzGNPlmfKrfOB8xHctq/cy3DOeeax
J8sz5db5wPkIbttX7mU45zzz2JPlmXLrfOB8BLftK/cynHOeeezJ8ky5dT5w
PoPb9pF7Gc45zzz2ZFl+/nzhfAa37S17Gc45zzz2ZFl+/nzhnNv2v3sZzjnP
PPZkWX7+fOGct92eay/DOed7PfZkeabcOh845+e7PdZehnPOM489WZ4pt84H
zvn93b52L8M555nHnizPlFvnA+ecn+2j7db75JzzlseeLI+UW8c755zz/3vW
55zzvR57sjxSbh3vnHPO/+9Zn3POz/LYk+Wecut45Zxz/ppnfc4579VjT5aP
zK3jjXPO+Wue9Tnn/K4ee7K8JbeOJ84556/53us755yP6rEnj5Vb3zfnnPNz
/azrN+ecz+qxJ1+bW98H55zzWq+6PnPO+awee/KxufV5c845r/Ver8+cc87X
PfZmy63Pg3PO9/rj8e73fEv/D8/tz36+vV4/Oeec13js3S233g/nI3v1/Sfn
zzyf9Hr945xz3qfH3tW59fdwfmevvj/k3PMF55zzu3nsbc2t1+O8Z6++/+Pc
8wXnnPPZPPa25tbrcV7p1fd/nHv+4Jxzzh+rk/1eK7dej/Mzvfr+jvOevfr6
wjnnnL/icbI+50d69f0b5z17L9cHzjnn/AyPk/U5P9Kr7+8493zBOeec13ic
rM/5Fq++v+Pc8wXnnHPep8fJ+pxv8er7P849P3DOOed9epysz/ma7z3+qu8v
+dzey/9fzjnnfEaPk/X5nF59fOZ/b9/3t9zzAeecc873eZysz8f06uOPc845
55zP5XGyPr+nVx9fnHPOOeecb/E4WZ+f49XfP+ecc8455z15nKzP1736++Oc
c84553wkj5P1R/Xqz59zzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzPpP/AAs2Kpg=
    "], {{0, 100, 100}, {1, 0, 0}}, {0., 1.},
    ColorFunction->"RGBDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSizeRaw->1,
  PlotRange->{{0, 1}, {0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{
  3.6793065219795437`*^9, {3.679306555449281*^9, 3.6793065631581497`*^9}, {
   3.679314127552676*^9, 3.6793141650324783`*^9}, {3.679314261498935*^9, 
   3.679314276029079*^9}, 3.6802484378606157`*^9, 3.680248533061387*^9, 
   3.680248567902861*^9, 3.6802486670946474`*^9, 3.680248798511607*^9, {
   3.6802488718971767`*^9, 3.680248887107155*^9}, 3.680367758031793*^9, 
   3.6803678388379683`*^9, 3.6803679903347397`*^9, 3.680368028875846*^9}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[Raster3DBox[CompressedData["
1:eJzt2dtt5EYQBVABdgIOwZE4B4dg2N+OzZk5BD8/1u0t1Z0WOWJxTgNCoaSu
c3e0FNkAv//p1x9/+fbt7e3nf7+++fPrr/6f9fsPX6/p6ub5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6f
z+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6f
z+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+ef41Vzqd7ln+9N/
/3w+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pn+uX82lfpd7tj/998/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/PP86u51O9y+e/7068fPp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD7/yn41l/pdLv/e/vTrn8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P/4hfzaV+l8u/tz/9+ufz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/nf65fzaV+l8vnv7I//f7A5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD6fz3/fr+ZSv8vl81/Zn35/4PP5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz5/uV3Op3+Xy+fy5/vT7G5/P5/P5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fH41l/pdLp/P51f+9Psnn8/n8/l8Pp/P5/P5fD6fz+fz
+Xw+n8/n8/n86/vVXOp3uXw+n39Xf/r9n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
n8/n8/n8V/CrudTvcvl8Pp+/509/vvD5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6ffwW/mkv9LpfP5/P5r+lPfz7y+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
/x5+NZf6XS6fz+fz+Wf405+/fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz7+H
X82lfpfL5/P5fP5Ef/rznc/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/nvz6V+
l8vn8/l8Pv/5/vTzCZ/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5x/lV3Op3+Xy
+Xw+n8+/nz/9/MPn8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8+/vr/uqPs2pcrv9
qcvn8/l8Pp9/lD/1/Mbn8/l8Pp/P5/P5fD6fz+fzz/PXfVWf5uz2fD6fz+fz
+Y+eV1KXz+fz+Xw+/yi/qqm/W/l7buenP+d/LOeq1w+fzz/PT9dV7298Pp/P
5/P5fD7/fv66r+rTnN2ez+fz+Xw+/1l+eh5KXT6fz+fz+fyj/Kqm/m7l8/l8
Pn+Sn65uns/n8/l8Pp/P5/OP8td9VZ/m7PZ8Pp/P5/P5z/LT81Dq8vl8Pp/P
5x/lVzX1dyufz+fz+ZP8dHXzfD6fz+fz+Xw+n3+Uv+6r+jRnt+fz+Xw+n89/
lp+eh1KXz+fz+Xw+/yi/qqm/W/l8Pp/Pn+Snq5vn8/l8Pp/P5/P5/KP8dV/V
pzm7PZ/P5/P5fP6z/PQ8lLp8Pp/P5/P5R/lVTf3dyufz+Xz+JD9d3Tyfz+fz
+Xw+n8/nH+Wv+6o+zdnt+Xw+n8/n85/lp+eh1OXz+Xw+n8+f4lc19Xcrn8/n
8/lH+unq5vl8Pp/P5/P5fD7/KH/dV/Vpzm7P5/P5fD6ffxc/PW+lLp/P5/P5
fP4Uv6qpv1v5fD6f/1p+urp5Pp/P5/P5fD6fzz/KX/dVfZqz2/P5fD6fz+ff
xU/PW6nL5/P5fD6fz3+/pv5u5fP5fP61/HR183w+n8/n8/l8Pp9/lL/uq/o0
Z7fn8/l8Pp/Pv4ufnrdSl8/n8/l8Pp//HL+qqb9b+Xw+n3+s2/npz/l8Pp/P
5/P5fD7/Kv66r+rTnN2ez+fz+Xw+/1l+eh5KXT6fz+fz+Xw+P/Grmvq7lc/n
8+/mp6ub5/P5fD6fz+fz+fyj/HVf1ac5uz2fz+fz+Xz+s/z0PJS6fD6fz+fz
+Xw+/+N+VVN/t/L5/Hl+urp5Pp/P5/P5fD6fzz/KX/dVfZqz2/P5fD6fz+c/
y0/PQ6nL5/P5fD6fz+fz+fz3/aqm/m7l39NPVzfP5/P5fD6fz+fz+VP8dV/V
pzm7PZ/P5/P5fP6j55XU5fP5fD6fz+fz+Xw+n3+e3+V1fjXP5/P5fD6fz+fz
+VP8dV/Vpzm7PZ/P5/P5fP6j55XU5fP5fD6fz+fz+Xw+n3+e3+V1fjXP5/P5
fD6fz+fz+fyv76v6NGe35/P5fD6ff5yfPu9Tl8/n8/l8Pp/P5/P5fP5cv8vr
/Gqez+fz+Xw+n8/n8/n38Nd9VZ/m7PZ8Pp/P51/JT5+Xqcvn8/l8Pp/P5/P5
fD5/rt/ldX41z+fz+Xw+n8/n8/l8/iPzVe6jObs9n8/n8/mP+OnzLHX5fD6f
z+fz+Xw+n8/nz/W7vM6v5vl8Pp/P5/P5fD6fz38Ff91X9WnObs/n8/n8//bp
/Tp1+Xw+n8/n8/l8Pp/P5/Mrv8vr/Gqez+fz+Xw+n8/n8/l8/vX9dV/Vpzm7
PZ/Pfz0/vR+lLp/P5/P5fD6fz+fz+Xz+Z/ldXudX83w+n8/n8/l8Pp/P5/P5
676qT3N2ez6ffz0/vV+kLp/P5/P5fD6fz+fz+Xz+Z/ldXudX83w+n8/n8/l8
Pp/P5/P50/11X9WnObs9n/8Zfvr3kLp8Pp/P5/P5fD6fP9V/e/vu7/Xbkpf6
/Tyf/7r+s+4Pj/+7s3k+n8/n8/l8Pp/P5/P5fP69/XVf1ac5uz1/pp9eT6nL
5/P5fD6ff3V/+vtrPp/P5/P5/5+varq6eT6fz+fz+Xw+n8/n8/l8Pv8j/rqv
6tOc3f5V/fT/I3X5fD6fz+fzP+pPfz/L5/P5fD7/+X5V09XN8/l8Pp/P5/P5
fD6fz+fz+a/sr/uqPs3Z7Xf99POkLp/P5/P5/Pv709+f8vl8Pp/Pv59f1XR1
83w+n8/n8/l8Pp/P5/P5fD7/PH/dV/Vpzm6/66efJ3X5fD6fz+d/vj/9/Smf
z+fz+Xz+o35V09XN8/l8Pp/P5/P5fD6fz+fz+fzz/HVf1ac5u/2un36e1OXz
+Xw+n5/Mz36/yefz+Xw+n381v6rp6ub5fD6fz+fz+Xw+n8/n8/l8/ny/mkv9
LpfP5/P5fP6X35/9/pHP5/P5fD7/an5V09XN8/l8Pp/P5/P5fD6fz+fz+Xx+
51dzqd/l8vl8Pp/P//L7s99v8vl8Pp/P5z/qVzVd3Tyfz+fz+Xw+n8/n8/l8
Pp/P53+2X82lfpfL5/P5fP4kf/r7TT6fz+fz+fxH/aqmq5vn8/l8Pp/P5/P5
fD6fz+fz+fy7+9Vc6ne5fD6fz+dP8qe/P+Xz+Xw+n/98v6rp6ub5fD6fz+fz
+Xw+n8/n8/l8Pp9/bb+aS/0ul8/n8/n8M/ypz9/p75f5fD6fz5/oTz8/8Pl8
Pp/P5/P5fD6fz+fz+Xw+/9p+NZf6XS6fz+fzX9Of/nzkV/Oz37/z+Xz+Xf3p
zxc+n8/n8/l8Pp/P5/P5fD6fz+fz+bVfzaV+l8vn8/n8a/rTn198Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P51/Br+ZSv8vl8/l8/p4//fnC5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD7/4341l/pdLp/P51f+9Psnn8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8/tl+NZf6XS6fzz/Pn37/4fP5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+e/71dzqd/l8vlX9qf//fL5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6f
z+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6f
z+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz
+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+
n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n
8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8
Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P
5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5
fD6fz+fz+Xw+n8/n8/l8Pp/P5/P5fD6fz+fz+Xz+df0/AOKeUrc=
    "], {{0, 100, 100}, {3, 0, 0}}, {0., 1.},
    ColorFunction->"RGBDefaultColorFunction",
    Method->{"FastRendering" -> True}],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  AxesStyle->{},
  Background->None,
  BoxRatios->Automatic,
  Boxed->False,
  DefaultBaseStyle->"Image3DGraphics3D",
  ImageSizeRaw->3,
  PlotRange->{{0, 3}, {0, 100}, {0, 100}},
  ViewAngle->0.3937204213164485,
  ViewPoint->{0.35622184562191256`, -3.118984044617245, 1.2629507219700902`},
  ViewVertical->{-4.190452186313635, -0.26892141368527106`, 
   0.9549227050857638}]], "Output",
 CellChangeTimes->{
  3.6793065219795437`*^9, {3.679306555449281*^9, 3.6793065631581497`*^9}, {
   3.679314127552676*^9, 3.6793141650324783`*^9}, {3.679314261498935*^9, 
   3.679314276029079*^9}, 3.6802484378606157`*^9, 3.680248533061387*^9, 
   3.680248567902861*^9, 3.6802486670946474`*^9, 3.680248798511607*^9, {
   3.6802488718971767`*^9, 3.680248887107155*^9}, 3.680367758031793*^9, 
   3.6803678388379683`*^9, 3.6803679903347397`*^9, 3.6803680299696426`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scratch space for new tests", "Title",
 CellChangeTimes->{{3.6793065054495597`*^9, 3.6793065100617576`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"r", ",", "g", ",", "b"}], "}"}], "~", "ContainsAll", "~", 
  RowBox[{"{", 
   RowBox[{"b", ",", "g"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.679307835048423*^9, 3.6793078389623117`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6793078393677998`*^9, 3.680367758328683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"make", " ", "a", " ", "2", "x2", " ", "array", " ", "of", " ", 
     RowBox[{"a", ":", " ", "number"}]}], ",", " ", 
    RowBox[{"b", ":", " ", 
     RowBox[{"4", "-", "vector"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GridDataMakeFromArrays", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"IdentityMatrix", "@", "2"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "4"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", "1"}], "]"}], 
   "//", "GDArrayDepth"}]}]], "Input",
 CellChangeTimes->{{3.6793131428520794`*^9, 3.679313213717594*^9}, {
  3.679313291628873*^9, 3.679313298079913*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.679313162899112*^9, 3.67931321442848*^9}, {
   3.6793132944063597`*^9, 3.6793132983903027`*^9}, 3.6803677583599343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GridDataMakeFromArrays", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"List", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "1"}], "]"}], "//", "GDAsRulesOfRules"}]}], "Input",
 CellChangeTimes->{{3.6793108198283253`*^9, 3.679310823080387*^9}, {
  3.6793129388243237`*^9, 3.679312942824319*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "1", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"{", "1", "}"}]}], ",", 
      RowBox[{"b", "\[Rule]", "4"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"b", "\[Rule]", "5"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", 
       RowBox[{"{", "3", "}"}]}], ",", 
      RowBox[{"b", "\[Rule]", "6"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6793108241397095`*^9, {3.679312830757366*^9, 3.67931284114734*^9}, {
   3.67931292876675*^9, 3.679312943169736*^9}, 3.679312995929617*^9, 
   3.6793130400757427`*^9, 3.6793130895985823`*^9, 3.68036775890683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"List", "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "\[IndentingNewLine]", "}"}],
   "//", "ArrayDepth"}]], "Input",
 CellChangeTimes->{{3.679311021796524*^9, 3.6793110238461075`*^9}, {
  3.6793110839751825`*^9, 3.6793110855291224`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.679311024175538*^9, 3.679311085800446*^9, 
  3.680367758938084*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"List", "/@", 
      RowBox[{"List", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.679312011365201*^9, 3.6793120315233884`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "2", "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "3", "}"}], "}"}], ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.679312011728655*^9, 3.6793120327158613`*^9}, 
   3.6803677589693356`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ArrayInterleave", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"List", "@", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6793122964601994`*^9, 3.679312299385869*^9}, {
  3.679312705387832*^9, 3.679312729632107*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "6"}], "}"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6793123001077704`*^9, {3.6793127075986004`*^9, 3.679312730007574*^9}, 
   3.6803677590005674`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"List", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"List", "@", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.679312264086815*^9, 3.6793122650209703`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.679312265396412*^9, 3.679312365764756*^9, 
  3.6803677590318327`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<<", "paul`"}], "\[IndentingNewLine]", 
   RowBox[{"GeneralizedTranspose", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"List", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"List", "@", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.679311033998761*^9, 3.6793110919951973`*^9}, {
   3.6793111701467695`*^9, 3.6793111983309793`*^9}, {3.6793112905551405`*^9, 
   3.6793113615888233`*^9}, {3.6793114217629633`*^9, 
   3.6793114549233875`*^9}, {3.6793114982214546`*^9, 3.679311520661474*^9}, {
   3.679311557580559*^9, 3.67931157252522*^9}, {3.679311733637401*^9, 
   3.67931174024767*^9}, {3.6793118710810275`*^9, 3.679311900887262*^9}, 
   3.6793119855459595`*^9, {3.679312235077551*^9, 3.6793122580482492`*^9}, {
   3.679312305293229*^9, 3.679312305439412*^9}, {3.679312355496956*^9, 
   3.679312358639859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.679311902663479*^9, 3.6793122586539927`*^9, 3.679312305899988*^9, {
   3.679312353721731*^9, 3.679312359133459*^9}, 3.6793125185164957`*^9, 
   3.6793125502250757`*^9, 3.6793126353936834`*^9, 3.6803677590630884`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"List", "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", "1", "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6793108652981205`*^9, 3.679310882125133*^9}, 
   3.6793109546807323`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.679310883060284*^9, 3.679310955266472*^9, 
  3.6803677590943384`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"r", ",", "g", ",", "b"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"gd", "=", 
  RowBox[{"GridDataMakeFromArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "g", ",", "b"}], "}"}], ",", 
    RowBox[{"IdentityMatrix", "@", "3"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GDDataSubset", "[", 
   RowBox[{"gd", ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "g"}], "}"}]}], "]"}], "//", 
  "GDAsRulesOfRules"}]}], "Input",
 CellChangeTimes->{{3.679225630922534*^9, 3.6792256486835475`*^9}, {
  3.6793077968667283`*^9, 3.679307804773603*^9}, {3.679307927945425*^9, 
  3.6793079574752817`*^9}}],

Cell[BoxData[
 RowBox[{"GridData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", ",", "g", ",", "b"}], "}"}], ",", 
   RowBox[{"FiniteMapping", "[", 
    RowBox[{"Array", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.679307806255453*^9, 3.6793078576185894`*^9, {3.679307928614242*^9, 
   3.679307958029974*^9}, {3.679307997077748*^9, 3.6793080236559205`*^9}, 
   3.679308066177017*^9, 3.6803677596104527`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "1", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "0"}], ",", 
      RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "0"}], ",", 
      RowBox[{"g", "\[Rule]", "1"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[Rule]", "1"}], ",", 
      RowBox[{"g", "\[Rule]", "0"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.679307806255453*^9, 3.6793078576185894`*^9, {3.679307928614242*^9, 
   3.679307958029974*^9}, {3.679307997077748*^9, 3.6793080236559205`*^9}, 
   3.679308066177017*^9, 3.6803677596104527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomReal", "[", 
  RowBox[{"1.", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
    "0.6705934250079306`", ",", "0.8578118173108451`", ",", 
     "0.604370553866332`"}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6792959335370626`*^9, 3.6803677597198324`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageData", "@", 
   RowBox[{"Image3D", "@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{"1.", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.6792981636402316`*^9, 3.6792981717268314`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "0.6355861578594606`", ",", "0.4419657548507032`", ",", 
      "0.8554270984019889`"}], "}"}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6792981721593933`*^9, 3.6803677597510877`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "\n"}]], "Input",
 CellChangeTimes->{{3.679298253676787*^9, 3.679298253676787*^9}}],

Cell[BoxData["Transpose"], "Output",
 CellChangeTimes->{3.680367759782335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{"GridDataMakeFromArray", "[", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"GDToArray", "@", "d"}], "//", "Normal"}]}], "Input",
 CellChangeTimes->{{3.679299071858964*^9, 3.6792990799203815`*^9}, {
  3.679299110255249*^9, 3.679299112925876*^9}, {3.679299265652397*^9, 
  3.6792992723149843`*^9}, {3.6792994917606063`*^9, 3.6792994929283032`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToArray\\\", \\\"[\\\", \
\\\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and \
definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"Normal\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367760359609*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.6792990802948627`*^9, 3.6792991137640057`*^9, {3.6792992371287374`*^9, 
   3.6792992726274996`*^9}, 3.679299307691801*^9, 3.6792993986631436`*^9, {
   3.679299488560155*^9, 3.6792994932673826`*^9}, 3.680367760359609*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "FiniteMappingMakeFromArray[{{1,2,3}},1]"}]], "Input",
 CellChangeTimes->{{3.6792992274259496`*^9, 3.679299227566599*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Get", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"FiniteMappingMakeFromArray[{{1,2,3}},1]\
\\\\\\\"\\\"}]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/noopen\\\", ButtonNote -> \
\\\"Get::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677604220924`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.679299224606332*^9, 3.6803677604220924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GDDomain", "@", 
  RowBox[{"GridDataMakeFromArray", "@", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1.", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1", ",", "3"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.679299933186821*^9, 3.6792999474428773`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDDomain\\\", \\\"[\\\", \\\
\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and \
definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677604689846`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6792999482567215`*^9, 3.6803677604689846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GDArrayDepth", "@", 
    RowBox[{"GridDataMakeFromArray", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], "]"}]}], ",", "\n", 
   RowBox[{"GDArrayDepth", "@", 
    RowBox[{"GridDataMakeFromArray", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1.", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "3"}], "}"}]}], "]"}], 
     "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "Input",
 CellChangeTimes->{{3.6792998070244627`*^9, 3.67929984027333*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDArrayDepth\\\", \
\\\"[\\\", \\\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check \
argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677610315113`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDArrayDepth\\\", \
\\\"[\\\", \\\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check \
argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677610783844`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Failed", ",", "$Failed"}], "}"}]], "Output",
 CellChangeTimes->{{3.6792998156209364`*^9, 3.6792998335893035`*^9}, 
   3.6803677610783844`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NearestFilter", "[", "img_Image", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"id", ",", "nf", ",", "nearestimg"}], "}"}], ",", 
      RowBox[{
       RowBox[{"id", "=", 
        RowBox[{"ImageData", "@", "img"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nf", "=", 
        RowBox[{"Nearest", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"id", ",", 
           RowBox[{"{", 
            RowBox[{"___", ",", 
             RowBox[{"_", "?", "Positive"}]}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nearestimg", "=", 
        RowBox[{"Array", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Extract", "[", 
            RowBox[{"id", ",", 
             RowBox[{"First", "[", 
              RowBox[{
               RowBox[{"nf", "[", 
                RowBox[{"List", "@", "##"}], "]"}], ",", "1"}], "]"}]}], 
            "]"}], "&"}], ",", 
          RowBox[{"Most", "@", 
           RowBox[{"Dimensions", "@", "id"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Image", "[", 
        RowBox[{"nearestimg", ",", 
         RowBox[{"ColorSpace", "\[Rule]", 
          RowBox[{"ImageColorSpace", "@", "img"}]}]}], "]"}]}]}], "]"}]}], 
   ";"}], "\n"}]], "Input",
 CellChangeTimes->{{3.6792999735840073`*^9, 3.679299973599634*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{"d", "=", 
  RowBox[{"GridDataMakeFromRules", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}]}], "\n", 
 RowBox[{"GDDomain", "@", "d"}]}], "Input",
 CellChangeTimes->{{3.679300596314138*^9, 3.679300610327428*^9}, {
  3.6793007202737637`*^9, 3.6793007641001716`*^9}}],

Cell[BoxData[
 RowBox[{"GridData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "}"}], ",", 
   RowBox[{"FiniteMapping", "[", 
    RowBox[{"FiniteMapping`Private`Rules", ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[RightAssociation]"}]}],
     "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.679300721773611*^9, 3.679300764443882*^9}, 
   3.6803677616741176`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.679300721773611*^9, 3.679300764443882*^9}, 
   3.6803677616741176`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.679300119049255*^9, 3.6793001876093235`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoordinateBoundsArray", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.679300076263177*^9, 3.679300093858802*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.680367761736617*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GDSelectList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GridDataMakeFromArray", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "42", "}"}], ",", 
       RowBox[{"{", "50", "}"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"#", "\[Equal]", 
      RowBox[{"{", "50", "}"}]}], "&"}]}], "]"}], "//", 
  "GDAsRules"}]}], "Input",
 CellChangeTimes->{{3.6793026597013807`*^9, 3.6793026895432158`*^9}, {
  3.679303057495016*^9, 3.6793030824011993`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelectList\\\", \
\\\"[\\\", RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{\\\"#1\\\", \\\"\
\[Equal]\\\", RowBox[{\\\"{\\\", \\\"50\\\", \\\"}\\\"}]}], \\\"&\\\"}]}], \\\
\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and definition \
conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"GDAsRules\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367762314767*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDAsRules\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367762346021*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.679302689949733*^9, {3.6793030134295883`*^9, 3.679303082887861*^9}, 
   3.680367762346021*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GDNearestFilter", "[", 
   RowBox[{
    RowBox[{"GridDataMakeFromArray", "@", 
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], "}"}]}], "]"}], "//", 
  "GDAsRules"}]}], "Input",
 CellChangeTimes->{{3.6792997209099274`*^9, 3.6792997481983247`*^9}, {
  3.679299867841651*^9, 3.6792999169873776`*^9}, {3.6793000425407925`*^9, 
  3.6793001132554235`*^9}, {3.679300188793324*^9, 3.679300406586376*^9}, {
  3.679300796129287*^9, 3.679300819351844*^9}, {3.679300956359815*^9, 
  3.679300976412956*^9}, {3.679301311081794*^9, 3.679301316662527*^9}, {
  3.6793013505258827`*^9, 3.679301359500394*^9}, {3.679301391131925*^9, 
  3.679301414949659*^9}, {3.679301461307282*^9, 3.679301475627901*^9}, {
  3.6793015311191072`*^9, 3.6793015785793114`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDNearestFilter\\\", \
\\\"[\\\", RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\
\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and \
definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"GDAsRules\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677629866695`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDAsRules\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677630179195`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.679300291243158*^9, 3.679300300947568*^9}, {
   3.6793003702073765`*^9, 3.6793003827465324`*^9}, 3.6793009791326056`*^9, {
   3.679301302953001*^9, 3.6793013191917124`*^9}, 3.679301359875617*^9, {
   3.679301392351206*^9, 3.679301417215094*^9}, {3.6793014649455395`*^9, 
   3.679301476002884*^9}, 3.6793015319476314`*^9, {3.6793015670498066`*^9, 
   3.6793015791586504`*^9}, 3.68036776303353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "GridData`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GDSelect", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GridDataMakeFromArray", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "42", "}"}], ",", 
       RowBox[{"{", "50", "}"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "~", "FMEvaluate", "~", 
       RowBox[{"{", "1", "}"}]}], "\[Equal]", "42"}], "&"}]}], "]"}], "//", 
  "GDAsRules"}]}], "Input",
 CellChangeTimes->{{3.6793030982284827`*^9, 3.6793032041324406`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\
\\\"}]}], \\\"]\\\"}], \\\"\[Equal]\\\", \\\"42\\\"}], \\\"&\\\"}]}], \\\"]\\\
\"}]\\)\[NoBreak] is undefined. Check argument count and definition \
conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"GDAsRules\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367763596068*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDAsRules\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677636429443`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.679303103767703*^9, 3.679303204601537*^9}, 
   3.6803677636429443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"FiniteMapping", "[", 
    RowBox[{"Lists", ",", 
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}], ",", 
     RowBox[{"{", "42", "}"}], ",", "paul`Private`f$47296"}], "]"}], "~", 
   "FMEvaluate", "~", 
   RowBox[{"{", "1", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6793031644888897`*^9, 3.6793031923704596`*^9}}],

Cell[BoxData[
 RowBox[{"FMEvaluate", "[", 
  RowBox[{
   RowBox[{"FiniteMapping", "[", 
    RowBox[{"Lists", ",", 
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}], ",", 
     RowBox[{"{", "42", "}"}], ",", "paul`Private`f$47296"}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6793031929954643`*^9, 3.680367763705432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GDSelect", "[", 
    RowBox[{
     RowBox[{"GridDataMakeFromArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], " ", "}"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "~", "FMEvaluate", "~", "a"}], ">", "0"}], "&"}]}], "]"}],
    "//", "GDToArray"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.6793034575698724`*^9, 3.6793034645839386`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \
\\\">\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Normal\\\", \\\",\\\", \
\\\"GDToArray\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677637523284`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToArray\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"Normal\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677637991877`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.6803677637991877`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}], "}"}], ",", 
   RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6793034734514494`*^9, 3.6793034966107283`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[{{{1., 0., 0., 1.}}}, {{0, 1}, {1, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1, 1},
  PlotRange->{{0, 1}, {0, 1}}]], "Output",
 CellChangeTimes->{{3.679303475507902*^9, 3.6793034969955153`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}], "}"}], ",", 
   RowBox[{"ColorSpace", "\[Rule]", "\"\<RGB\>\""}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[{{{1., 0., 0., 1.}}}, {{0, 1}, {1, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1, 1},
  PlotRange->{{0, 1}, {0, 1}}]], "Output",
 CellChangeTimes->{3.6803677638304577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"<<", "GridData`"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GDSelect", "[", 
     RowBox[{
      RowBox[{"GridDataMakeFromArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], " ", "}"}], 
         "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "~", "FMEvaluate", "~", "a"}], ">", "0"}], "&"}]}], 
     "]"}], "//", "GDToImage"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GDMapList", "[", "\[IndentingNewLine]", 
     RowBox[{"Most", "\[IndentingNewLine]", ",", 
      RowBox[{"GDSelect", "[", 
       RowBox[{
        RowBox[{"GridDataMakeFromArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], " ", 
            "}"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "~", "FMEvaluate", "~", "a"}], "==", "0"}], "&"}]}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}], "//", "GDToImage"}]}], "\[IndentingNewLine]", "}"}]}], "Input",
 CellChangeTimes->{{3.6793032895706053`*^9, 3.679303297028905*^9}, {
  3.6793034241626015`*^9, 3.6793034383054733`*^9}, {3.679303747675763*^9, 
  3.67930381122452*^9}, {3.6793043161579647`*^9, 3.6793043648449364`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \
\\\">\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"GDToImage\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367764392976*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToImage\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"List\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367764439855*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is \
undefined. Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"GDToImage\\\", \\\",\\\", \\\"GDMapList\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.680367764486741*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \\\"::\\\", \
\\\"undefined\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed \
during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68036776451798*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Failed", ",", "$Failed"}], "}"}]], "Output",
 CellChangeTimes->{{3.679303764155015*^9, 3.6793037810108757`*^9}, 
   3.6793038120058084`*^9, {3.679304318329957*^9, 3.6793043652164354`*^9}, 
   3.68036776451798*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "paul`"}]], "Input",
 CellChangeTimes->{{3.679305415746205*^9, 3.6793054171578703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GDMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FiniteMappingMakeFromList", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"#", "~", "FMEvaluate", "~", 
          RowBox[{"{", "1", "}"}]}], ")"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridDataMakeFromArray", "[", 
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], "//",
   "GDAsRules"}]], "Input",
 CellChangeTimes->{{3.679304391553667*^9, 3.679304460244626*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDMap\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"FiniteMappingMakeFromList\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\" \\\", RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\
\\\"}]}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\
\"Null\\\"}], \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and \
definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"GDAsRules\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677645961037`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDAsRules\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367764627344*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.6793044320934734`*^9, 3.679304460588374*^9}, 
   3.680367764627344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "//", "HasAlphaChannel"}]], "Input",
 CellChangeTimes->{{3.6793054351572104`*^9, 3.679305438369874*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.679305438700528*^9, 3.680367764674221*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "GridData`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"GridDataMakeFromImage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
        "], {{0, 100}, {100, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{100, 100},
      PlotRange->{{0, 100}, {0, 100}}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"originalbounds", "=", 
    RowBox[{"GDCoordinateBounds", "@", "d"}]}], "\n", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"GDSelect", "[", 
      RowBox[{"d", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "~", "FMEvaluate", "~", "a"}], ">", "0"}], "&"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d", "//", "GDToImage"}]}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GDCoordinateBounds", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GDArrayDepth", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"GDNearestFilter", "[", 
      RowBox[{"d", ",", "originalbounds"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"d", "//", "GDToImage"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"GDCoordinateBounds", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GDArrayDepth", "@", "d"}]}], "\[IndentingNewLine]", 
  "}"}]}], "Input",
 CellChangeTimes->{{3.679304711156617*^9, 3.679304773972675*^9}, {
  3.679304845713438*^9, 3.6793048814558034`*^9}, {3.6793052004661713`*^9, 
  3.679305272075345*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDCoordinateBounds\\\", \
\\\"[\\\", \\\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check \
argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"Set\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677653671045`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \
\\\">\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"CompoundExpression\\\", \\\",\\\", \\\"Set\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.680367765398359*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToImage\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"List\\\", \\\",\\\", \\\"CompoundExpression\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677654452353`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \\\"::\\\", \
\\\"undefined\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed \
during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367765476504*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", ",", "$Failed", 
   ",", "$Failed", ",", "$Failed"}], "}"}]], "Output",
 CellChangeTimes->{{3.6793052640885067`*^9, 3.679305273262968*^9}, 
   3.680367765476504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt182NJEUUhdGWwAFMwBJ8wAQEa2zDM0xAQrxFva4eprIy88bPCQldfXFY
Tmd0//zbn7/+8cPHx8fv//3340c/f/+id+x+zznnnHN+llv7bOvoPXuU7xPn
nHPO53Nrj2wdrZ/1KN83zjnnnN/v1l6xdbR+1qN8/zjnnHN+v1t7xdbR+kiP
8n3knHPO+etubWLraH2kR/l+cs455/x1tzaxdbS+okf5vnLOOec7urUjbh2t
r+i7vq+cc845/+zWjrh1tE70Wd9XzjnnfEe3dsato3Wi+z3nnHPOrV1762id
6H7POeecc2vX3jpaj9j9nnPOOV/Jrd1x62g9Y/d7zjnnfCa3dseto/WM3e85
55zzkdxa+/XPjdYrdr/nnHPO73Rr7dc/N1qv2P2ec845P9Otta9vHa137H7P
OeecW2uv3Tpa79j9nnPOObfWXrt1tN6x+z3nnPO93Fp7/9bRWn/ufs8553wu
t9aOt3W01p+733POOZ/LrbXjbR2t9evd7znnnN/r1tr5to7W+vXu95xzzu91
a+18W0dr/Xr3e8455+e6tXa9raO1Pr/7Peecc2vt7ltHa31+93vOOefW2t23
jtb6/u73nHO+mltrbd86Wuv7u99zzvlqbq21fetorcfrfs8556O5tda+unW0
1uN1v+ec89HcWmtf3Tpa6/m633PO+dlurbVnbx2t9Xzd7znn/Gy31tqzt47W
er3u95xz3t1aa+/eOlrr/brfc87Xc2utHW3raK33637POV/PrbV2tK2jtd6v
+z3nfD631trZto7WWvfu95zz+91aa1fbOlpr/Wr3e875+W6ttattHa21Prv7
Pef8vPfbWmtn3Tpaa31393vOd3Rrrd1t62it9d3d7zlf0a211j5uHa21vrv7
PecrurXW2seto7XWd3e/53xFt9Za+7h1tNb67u73nK/o1lprH7eO1lrf3f2e
8xXdWmvt49bRWuu7u99zvqNba+1uW0drrUfrfs/5jm6ttattHa21Hq37Pef8
+993a60ddetorfVo3e8556+7tdaOtnW01nq07vec8/vdWmvP3jpaaz1a93vO
+Xpurd1v62it9Wjd7znn/G631p6/dbTWerTu95xzzjmf37XWetROfx8555xz
fr5rrXWq098/zjnnnN/vWmud6vT3j3POOef3u9Zapzr9/eOcc875/a611ld1
+vvGOeec8/Fca62Pdvr7xTnnnPP5XGutj3b6+8U555zz+Vxrrb/q9PeJc76u
f3z89O/5q/3/vP9/j4fzFVxrrb/q9PeJ86Snf//k3N83fFXXWu/b6e8P51d6
+vc7zlf29M83n9u11ut2+vvC+Tue/v2Kc+7vF36Na63X7fT3hfNvefr3H875
vJ7+fvH3XGu9bqe/L3xvT/9+wjnn/n4Z07XW83b6+8H39vTvD5xz7u+XOV1r
nev0zz/n73j6/eec81k9/f1Ou9b6eKd/fjm/0tPvM+ec8+eefh/ef1+0nrfT
Pz+cr+zp95Vzzvk1nn9ftD7e6X+/nPPrPP0+cs45H9Pff1+0/rrf/ffFOZ/X
0+8b55zzVV2v3P2ec86/1/PvE+ec8zVdj9z9nnPO7/L8+8Q553xN18n+v/ef
c85H9fz7xTnnfE7X73T6/eec85Tn3y/OOedzuv5Wp993zjkf1fPvF+ec8zl9
706/35xzPqvn3y/OOedz+tydfn8555w/9/z7xjnnfEwfu9PvJ+ec82Oef984
55yP6dlOv4+cc86v8fz7xjnnfEy/ttPvH+ec8zE9//5xzjnP+Lc7/T5xzjlf
0/PvH+ec84Sn3x/OOed7evr945xznvH0+8M553xPT79/nHPOM55+fzjnnPNn
nn4fOeecX+Pp94Vzzjl/5un3kXPO+TWefl8455zzZ55+HznnnF/j6feFc845
P+Lp95NzzvkxT78fnHPO+RFPv5+cc86Pefr94Jxzzo94+v3knHN+zNPvB+ec
c36Fp99Xzjnnzz39PnDOOedXePp95Zxz/tzT7wPnnHN+haffV8455889/T5w
zjnnCU+/v5xzvqunv/+cc855wtPvL+ec7+rp7z/nnHOe8PT7yznnu3r6+885
55yP6On3mXPOV/X0951zzjkf0dPvM+ecr+rp7zvnnHM+oqffZ845X8//AW5T
e7U=
     "], {{0, 100}, {100, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "//", "HasTra"}]], "Input",
 CellChangeTimes->{{3.6793052955112004`*^9, 3.6793052972019567`*^9}}],

Cell[BoxData[
 RowBox[{"HasTra", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt182NJEUUhdGWwAFMwBJ8wAQEa2zDM0xAQrxFva4eprIy88bPCQldfXFY
Tmd0//zbn7/+8cPHx8fv//3340c/f/+id+x+zznnnHN+llv7bOvoPXuU7xPn
nHPO53Nrj2wdrZ/1KN83zjnnnN/v1l6xdbR+1qN8/zjnnHN+v1t7xdbR+kiP
8n3knHPO+etubWLraH2kR/l+cs455/x1tzaxdbS+okf5vnLOOec7urUjbh2t
r+i7vq+cc845/+zWjrh1tE70Wd9XzjnnfEe3dsato3Wi+z3nnHPOrV1762id
6H7POeecc2vX3jpaj9j9nnPOOV/Jrd1x62g9Y/d7zjnnfCa3dseto/WM3e85
55zzkdxa+/XPjdYrdr/nnHPO73Rr7dc/N1qv2P2ec845P9Otta9vHa137H7P
OeecW2uv3Tpa79j9nnPOObfWXrt1tN6x+z3nnPO93Fp7/9bRWn/ufs8553wu
t9aOt3W01p+733POOZ/LrbXjbR2t9evd7znnnN/r1tr5to7W+vXu95xzzu91
a+18W0dr/Xr3e8455+e6tXa9raO1Pr/7Peecc2vt7ltHa31+93vOOefW2t23
jtb6/u73nHO+mltrbd86Wuv7u99zzvlqbq21fetorcfrfs8556O5tda+unW0
1uN1v+ec89HcWmtf3Tpa6/m633PO+dlurbVnbx2t9Xzd7znn/Gy31tqzt47W
er3u95xz3t1aa+/eOlrr/brfc87Xc2utHW3raK33637POV/PrbV2tK2jtd6v
+z3nfD631trZto7WWvfu95zz+91aa1fbOlpr/Wr3e875+W6ttattHa21Prv7
Pef8vPfbWmtn3Tpaa31393vOd3Rrrd1t62it9d3d7zlf0a211j5uHa21vrv7
PecrurXW2seto7XWd3e/53xFt9Za+7h1tNb67u73nK/o1lprH7eO1lrf3f2e
8xXdWmvt49bRWuu7u99zvqNba+1uW0drrUfrfs/5jm6ttattHa21Hq37Pef8
+993a60ddetorfVo3e8556+7tdaOtnW01nq07vec8/vdWmvP3jpaaz1a93vO
+Xpurd1v62it9Wjd7znn/G631p6/dbTWerTu95xzzjmf37XWetROfx8555xz
fr5rrXWq098/zjnnnN/vWmud6vT3j3POOef3u9Zapzr9/eOcc875/a611ld1
+vvGOeec8/Fca62Pdvr7xTnnnPP5XGutj3b6+8U555zz+Vxrrb/q9PeJc76u
f3z89O/5q/3/vP9/j4fzFVxrrb/q9PeJ86Snf//k3N83fFXXWu/b6e8P51d6
+vc7zlf29M83n9u11ut2+vvC+Tue/v2Kc+7vF36Na63X7fT3hfNvefr3H875
vJ7+fvH3XGu9bqe/L3xvT/9+wjnn/n4Z07XW83b6+8H39vTvD5xz7u+XOV1r
nev0zz/n73j6/eec81k9/f1Ou9b6eKd/fjm/0tPvM+ec8+eefh/ef1+0nrfT
Pz+cr+zp95Vzzvk1nn9ftD7e6X+/nPPrPP0+cs45H9Pff1+0/rrf/ffFOZ/X
0+8b55zzVV2v3P2ec86/1/PvE+ec8zVdj9z9nnPO7/L8+8Q553xN18n+v/ef
c85H9fz7xTnnfE7X73T6/eec85Tn3y/OOedzuv5Wp993zjkf1fPvF+ec8zl9
706/35xzPqvn3y/OOedz+tydfn8555w/9/z7xjnnfEwfu9PvJ+ec82Oef984
55yP6dlOv4+cc86v8fz7xjnnfEy/ttPvH+ec8zE9//5xzjnP+Lc7/T5xzjlf
0/PvH+ec84Sn3x/OOed7evr945xznvH0+8M553xPT79/nHPOM55+fzjnnPNn
nn4fOeecX+Pp94Vzzjl/5un3kXPO+TWefl8455zzZ55+HznnnF/j6feFc845
P+Lp95NzzvkxT78fnHPO+RFPv5+cc86Pefr94Jxzzo94+v3knHN+zNPvB+ec
c36Fp99Xzjnnzz39PnDOOedXePp95Zxz/tzT7wPnnHN+haffV8455889/T5w
zjnnCU+/v5xzvqunv/+cc855wtPvL+ec7+rp7z/nnHOe8PT7yznnu3r6+885
55yP6On3mXPOV/X0951zzjkf0dPvM+ecr+rp7zvnnHM+oqffZ845X8//AW5T
e7U=
     "], {{0, 100}, {100, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "]"}]], "Output",
 CellChangeTimes->{3.6803677655077376`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ImageProperties"], "Input",
 CellChangeTimes->{{3.6793052996707125`*^9, 3.6793053133976717`*^9}}],

Cell[BoxData["ImageProperties"], "Output",
 CellChangeTimes->{3.6803677655389853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorNegate", "@", 
  RowBox[{"RemoveAlphaChannel", "@", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}]}]}]], "Input",
 CellChangeTimes->{{3.6793055526209917`*^9, 3.6793055598458033`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt2sFKw0AQgOFFLx59Bd/Cq0evFR+gpbH0EiEVxJf2FWLCFomUprO7Y3c2
+/9MQhLYw3znPGzeV283zrnD3XBbrT+fum799XI/vLy2h/2ubbbP7Ueza7rH
ze3wcXu8xmciIiIiIiIiIiIiIiIiUq7vxyFJWAnzUHBdbAoF13xYSTpVgutc
WAmbgYJr2kUorHwSKLhcCFTlVkFQNXNFQGEF13zRULVxJUJVY9W7ZKhCuFT2
rMFKaUmssPoTVvKwkmfLyjaX3pLL57JoZZXLqNXSuZStTIqZtjKGVoaVGbry
rPLpYXVNrsxQ17VKFKvQKpqrTqsIsfxQWa3kYvmVbFg5AVd+JTNWvuxQ/bc7
N6agfvs/qxkKydhMHSpRySyUTwsqXck4lFOyUoGqwUoLyr7VGFDyDFgVE1Dy
8lmVV5yVP1oVlFP4gXb5RNPSrOoKqKBQCgqooIAiIiIiIiIiIiIiIiIiMtAP
QN/ASQ==
    "], {{0, 100}, {100, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{3.6803677655702224`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"GridDataMakeFromImage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
        "], {{0, 100}, {100, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{100, 100},
      PlotRange->{{0, 100}, {0, 100}}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"originalbounds", "=", 
    RowBox[{"GDCoordinateBounds", "@", "d"}]}], "\n", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"GDSelect", "[", 
      RowBox[{"d", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "~", "FMEvaluate", "~", "a"}], ">", "0"}], "&"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d", "//", "GDToImage"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"d", "//", "GDToImage"}], "//", "HasAlphaChannel"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"GDCoordinateBounds", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GDArrayDepth", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"d", "=", 
     RowBox[{"GDNearestFilter", "[", 
      RowBox[{"d", ",", "originalbounds"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"d", "//", "GDToImage"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"d", "//", "GDToImage"}], "//", "HasAlphaChannel"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"GDCoordinateBounds", "@", "d"}], "\[IndentingNewLine]", ",", 
   RowBox[{"GDArrayDepth", "@", "d"}]}], "\[IndentingNewLine]", 
  "}"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDCoordinateBounds\\\", \
\\\"[\\\", \\\"Null\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check \
argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"Set\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677656171*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \
\\\">\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"List\\\", \\\",\\\", \
\\\"CompoundExpression\\\", \\\",\\\", \\\"Set\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677656483507`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToImage\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"List\\\", \\\",\\\", \\\"CompoundExpression\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677656952276`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \\\"::\\\", \
\\\"undefined\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed \
during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367765726493*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ImageMeasurements", "::", "imginv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expecting an image or a graphic instead of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ImageMeasurements\\\", \
ButtonNote -> \\\"ImageMeasurements::imginv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677657889996`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ImageMeasurements", "::", "imginv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expecting an image or a graphic instead of \
\[NoBreak]\\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ImageMeasurements\\\", \
ButtonNote -> \\\"ImageMeasurements::imginv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677658515034`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Failed", ",", "$Failed", ",", 
   RowBox[{"ImageMeasurements", "[", 
    RowBox[{"$Failed", ",", "\<\"Transparency\"\>"}], "]"}], ",", "$Failed", 
   ",", "$Failed", ",", "$Failed", ",", 
   RowBox[{"ImageMeasurements", "[", 
    RowBox[{"$Failed", ",", "\<\"Transparency\"\>"}], "]"}], ",", "$Failed", 
   ",", "$Failed"}], "}"}]], "Output",
 CellChangeTimes->{3.679305631249509*^9, 3.6803677658515034`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "paul`"}]], "Input",
 CellChangeTimes->{{3.6793059112941537`*^9, 3.679305912511257*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<paul`Private`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.679306338624493*^9, 3.679306345997839*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6793062425036297`*^9, 3.6793062784789267`*^9}, {
   3.679306312039316*^9, 3.679306312258339*^9}, {3.6793063634150057`*^9, 
   3.6793063883414783`*^9}, {3.679306429214156*^9, 3.6793064697220573`*^9}, 
   3.6793065013327684`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageNormDifference", "[", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GDMapList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Most", "[", 
        RowBox[{"1", "-", "#"}], "]"}], "&"}], ",", 
      RowBox[{"GridDataMakeFromImage", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
           "], {{0, 100}, {100, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{100, 100},
         PlotRange->{{0, 100}, {0, 100}}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b"}], "}"}]}], "]"}], "//", "GDToImage"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"ColorNegate", "@", 
    RowBox[{"RemoveAlphaChannel", "@", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
        "], {{0, 100}, {100, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{100, 100},
      PlotRange->{{0, 100}, {0, 100}}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.679305736104592*^9, 3.679305758069438*^9}, {
  3.6793060342773786`*^9, 3.679306041334346*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDMapList\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"Most\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\"-\\\", \\\"#1\\\"}], \\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\"Null\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"r\\\", \\\",\\\", \\\"g\\\", \
\\\",\\\", \\\"b\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"ImageNormDifference\\\", \\\
\",\\\", \\\"GDToImage\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677660702624`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToImage\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"ImageNormDifference\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677661014957`*^9}],

Cell[BoxData[
 RowBox[{"ImageNormDifference", "[", 
  RowBox[{"$Failed", ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2sFKw0AQgOFFLx59Bd/Cq0evFR+gpbH0EiEVxJf2FWLCFomUprO7Y3c2
+/9MQhLYw3znPGzeV283zrnD3XBbrT+fum799XI/vLy2h/2ubbbP7Ueza7rH
ze3wcXu8xmciIiIiIiIiIiIiIiIiUq7vxyFJWAnzUHBdbAoF13xYSTpVgutc
WAmbgYJr2kUorHwSKLhcCFTlVkFQNXNFQGEF13zRULVxJUJVY9W7ZKhCuFT2
rMFKaUmssPoTVvKwkmfLyjaX3pLL57JoZZXLqNXSuZStTIqZtjKGVoaVGbry
rPLpYXVNrsxQ17VKFKvQKpqrTqsIsfxQWa3kYvmVbFg5AVd+JTNWvuxQ/bc7
N6agfvs/qxkKydhMHSpRySyUTwsqXck4lFOyUoGqwUoLyr7VGFDyDFgVE1Dy
8lmVV5yVP1oVlFP4gXb5RNPSrOoKqKBQCgqooIAiIiIiIiIiIiIiIiIiMtAP
QN/ASQ==
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}]}], "]"}]], "Output",
 CellChangeTimes->{3.679306041811309*^9, 3.6793061293830547`*^9, 
  3.6803677661014957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1sFNW1EQQFGkVJJK6CElRMk6FScdRKKECJGNiTCObf6/8/45EgKuWAwL
z5vPX398+f7p4eHh29+v558BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgP0+Pp9/f6wAAnOe+AgC4zv/e
Ue4uAIAXH31HubsAgKNxXwEAnFe7l9xdAMB0tbvIfQUATFG7f9xdAMAUtXum
1gEA3lK7W6Z3AOA4anfIqh0AWE/t3tABgClq94N+vgMAfbX7Qb+uAwDbq90D
+jYdALhd7X3X9+0AwPveeldf/67r5zrA0VX2sd7ulTn0GR3gKCp7V5/ZK3Po
MzrAUVT2rj6zV+bQZ3SAo6jsXX1mr8yhz+gAR1HZu/rMXplDn9EBjqKyd/WZ
vTKHPrsDrKayX/W1emUOfXYHmKqyR/W1emUOfc0OUFfZl/pavTKHfqwOUFfZ
l/rMXplD1891gK1V9p8+s1fm0PUtOsClKntLn9krc+j6yh1YR2Wv6O1emUPX
9e06cL3K51hv98ocuq5v14H7q3y+9W17ZQ5d1/fvwP4q+0C/rVfm0HV9/w50
VfaEflmvzKHr+v4dWEdlr6zeK3Pout7twHFV9lC1V+bQdX1eB3itsp/27pU5
dF2f1wFuVdln7ihd368/Pf76+ez3P383u7/1/wLU7P0OVOfQZ/baPaBv0wGm
cEfphV57x/V9O8Cq3FH6Lb32XuvNDnA07iv9kl57r/VZHeBo3Ff66ffWu6yv
0QE4VXn39fv22vurr9EBuEzlHtDv22vvsj6rA3Cbyj2gX9dr77I+qwPwMSp3
gn5dr73X+r4dgIbKnaBf1i9Ve/f1+3YA2mr3g76P2v2wagfg2Gr3xtE6ALCe
2r2xagcAqN0ntQ4AcC+1O8cdBQCsqnYXuaMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgT38Al66v+A==

     "], {{0, 100}, {100, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "//", "HasAlphaChannel"}]], "Input",
 CellChangeTimes->{{3.6793060135115585`*^9, 3.679306015262812*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6793060261713834`*^9, 3.6803677661327443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt2sFKw0AQgOFFLx59Bd/Cq0evFR+gpbH0EiEVxJf2FWLCFomUprO7Y3c2
+/9MQhLYw3znPGzeV283zrnD3XBbrT+fum799XI/vLy2h/2ubbbP7Ueza7rH
ze3wcXu8xmciIiIiIiIiIiIiIiIiUq7vxyFJWAnzUHBdbAoF13xYSTpVgutc
WAmbgYJr2kUorHwSKLhcCFTlVkFQNXNFQGEF13zRULVxJUJVY9W7ZKhCuFT2
rMFKaUmssPoTVvKwkmfLyjaX3pLL57JoZZXLqNXSuZStTIqZtjKGVoaVGbry
rPLpYXVNrsxQ17VKFKvQKpqrTqsIsfxQWa3kYvmVbFg5AVd+JTNWvuxQ/bc7
N6agfvs/qxkKydhMHSpRySyUTwsqXck4lFOyUoGqwUoLyr7VGFDyDFgVE1Dy
8lmVV5yVP1oVlFP4gXb5RNPSrOoKqKBQCgqooIAiIiIiIiIiIiIiIiIiMtAP
QN/ASQ==
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "//", "HasAlphaChannel"}]], "Input",
 CellChangeTimes->{{3.679306020019039*^9, 3.6793060217838016`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.67930601552845*^9, 3.679306022424461*^9}, 
   3.680367766164011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "paul`"}], "\[IndentingNewLine]", 
 RowBox[{"ImageNormDifference", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt1sFNW1EQQFGkVJJK6CElRMk6FScdRKKECJGNiTCObf6/8/45EgKuWAwL
z5vPX398+f7p4eHh29+v558BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgP0+Pp9/f6wAAnOe+AgC4zv/e
Ue4uAIAXH31HubsAgKNxXwEAnFe7l9xdAMB0tbvIfQUATFG7f9xdAMAUtXum
1gEA3lK7W6Z3AOA4anfIqh0AWE/t3tABgClq94N+vgMAfbX7Qb+uAwDbq90D
+jYdALhd7X3X9+0AwPveeldf/67r5zrA0VX2sd7ulTn0GR3gKCp7V5/ZK3Po
MzrAUVT2rj6zV+bQZ3SAo6jsXX1mr8yhz+gAR1HZu/rMXplDn9EBjqKyd/WZ
vTKHPrsDrKayX/W1emUOfXYHmKqyR/W1emUOfc0OUFfZl/pavTKHfqwOUFfZ
l/rMXplD1891gK1V9p8+s1fm0PUtOsClKntLn9krc+j6yh1YR2Wv6O1emUPX
9e06cL3K51hv98ocuq5v14H7q3y+9W17ZQ5d1/fvwP4q+0C/rVfm0HV9/w50
VfaEflmvzKHr+v4dWEdlr6zeK3Pout7twHFV9lC1V+bQdX1eB3itsp/27pU5
dF2f1wFuVdln7ihd368/Pf76+ez3P383u7/1/wLU7P0OVOfQZ/baPaBv0wGm
cEfphV57x/V9O8Cq3FH6Lb32XuvNDnA07iv9kl57r/VZHeBo3Ff66ffWu6yv
0QE4VXn39fv22vurr9EBuEzlHtDv22vvsj6rA3Cbyj2gX9dr77I+qwPwMSp3
gn5dr73X+r4dgIbKnaBf1i9Ve/f1+3YA2mr3g76P2v2wagfg2Gr3xtE6ALCe
2r2xagcAqN0ntQ4AcC+1O8cdBQCsqnYXuaMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgT38Al66v+A==

      "], {{0, 100}, {100, 0}}, {0., 1.},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}], ",", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt2sFKw0AQgOFFLx59Bd/Cq0evFR+gpbH0EiEVxJf2FWLCFomUprO7Y3c2
+/9MQhLYw3znPGzeV283zrnD3XBbrT+fum799XI/vLy2h/2ubbbP7Ueza7rH
ze3wcXu8xmciIiIiIiIiIiIiIiIiUq7vxyFJWAnzUHBdbAoF13xYSTpVgutc
WAmbgYJr2kUorHwSKLhcCFTlVkFQNXNFQGEF13zRULVxJUJVY9W7ZKhCuFT2
rMFKaUmssPoTVvKwkmfLyjaX3pLL57JoZZXLqNXSuZStTIqZtjKGVoaVGbry
rPLpYXVNrsxQ17VKFKvQKpqrTqsIsfxQWa3kYvmVbFg5AVd+JTNWvuxQ/bc7
N6agfvs/qxkKydhMHSpRySyUTwsqXck4lFOyUoGqwUoLyr7VGFDyDFgVE1Dy
8lmVV5yVP1oVlFP4gXb5RNPSrOoKqKBQCgqooIAiIiIiIiIiIiIiIiIiMtAP
QN/ASQ==
      "], {{0, 100}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{100, 100},
    PlotRange->{{0, 100}, {0, 100}}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.679306000526832*^9, 3.6793060008082495`*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.6793059333418045`*^9, 3.6793060012459083`*^9, 
  3.680367766207375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Norm", "@*", "ImageData"}], ")"}], "@", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1sFNW1EQQFGkVJJK6CElRMk6FScdRKKECJGNiTCObf6/8/45EgKuWAwL
z5vPX398+f7p4eHh29+v558BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgP0+Pp9/f6wAAnOe+AgC4zv/e
Ue4uAIAXH31HubsAgKNxXwEAnFe7l9xdAMB0tbvIfQUATFG7f9xdAMAUtXum
1gEA3lK7W6Z3AOA4anfIqh0AWE/t3tABgClq94N+vgMAfbX7Qb+uAwDbq90D
+jYdALhd7X3X9+0AwPveeldf/67r5zrA0VX2sd7ulTn0GR3gKCp7V5/ZK3Po
MzrAUVT2rj6zV+bQZ3SAo6jsXX1mr8yhz+gAR1HZu/rMXplDn9EBjqKyd/WZ
vTKHPrsDrKayX/W1emUOfXYHmKqyR/W1emUOfc0OUFfZl/pavTKHfqwOUFfZ
l/rMXplD1891gK1V9p8+s1fm0PUtOsClKntLn9krc+j6yh1YR2Wv6O1emUPX
9e06cL3K51hv98ocuq5v14H7q3y+9W17ZQ5d1/fvwP4q+0C/rVfm0HV9/w50
VfaEflmvzKHr+v4dWEdlr6zeK3Pout7twHFV9lC1V+bQdX1eB3itsp/27pU5
dF2f1wFuVdln7ihd368/Pf76+ez3P383u7/1/wLU7P0OVOfQZ/baPaBv0wGm
cEfphV57x/V9O8Cq3FH6Lb32XuvNDnA07iv9kl57r/VZHeBo3Ff66ffWu6yv
0QE4VXn39fv22vurr9EBuEzlHtDv22vvsj6rA3Cbyj2gX9dr77I+qwPwMSp3
gn5dr73X+r4dgIbKnaBf1i9Ve/f1+3YA2mr3g76P2v2wagfg2Gr3xtE6ALCe
2r2xagcAqN0ntQ4AcC+1O8cdBQCsqnYXuaMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgT38Al66v+A==

     "], {{0, 100}, {100, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}]}]], "Input",
 CellChangeTimes->{{3.6793059525631285`*^9, 3.6793059663675585`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Norm", "::", "nvm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first Norm argument should be a number, vector, or \
matrix. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Norm\
\\\", ButtonNote -> \\\"Norm::nvm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.67930596685213*^9, 3.680367766288176*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"Norm", "[", 
          RowBox[{"{", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{71., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{63., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 186, 25626128519479403968, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{71., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 186, 25626128519479403968, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{54., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 186, 25626128519479403968, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{93., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[186]]], "Output",
 CellChangeTimes->{3.679305966930256*^9, 3.680367766350679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1sFNW1EQQFGkVJJK6CElRMk6FScdRKKECJGNiTCObf6/8/45EgKuWAwL
z5vPX398+f7p4eHh29+v558BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgP0+Pp9/f6wAAnOe+AgC4zv/e
Ue4uAIAXH31HubsAgKNxXwEAnFe7l9xdAMB0tbvIfQUATFG7f9xdAMAUtXum
1gEA3lK7W6Z3AOA4anfIqh0AWE/t3tABgClq94N+vgMAfbX7Qb+uAwDbq90D
+jYdALhd7X3X9+0AwPveeldf/67r5zrA0VX2sd7ulTn0GR3gKCp7V5/ZK3Po
MzrAUVT2rj6zV+bQZ3SAo6jsXX1mr8yhz+gAR1HZu/rMXplDn9EBjqKyd/WZ
vTKHPrsDrKayX/W1emUOfXYHmKqyR/W1emUOfc0OUFfZl/pavTKHfqwOUFfZ
l/rMXplD1891gK1V9p8+s1fm0PUtOsClKntLn9krc+j6yh1YR2Wv6O1emUPX
9e06cL3K51hv98ocuq5v14H7q3y+9W17ZQ5d1/fvwP4q+0C/rVfm0HV9/w50
VfaEflmvzKHr+v4dWEdlr6zeK3Pout7twHFV9lC1V+bQdX1eB3itsp/27pU5
dF2f1wFuVdln7ihd368/Pf76+ez3P383u7/1/wLU7P0OVOfQZ/baPaBv0wGm
cEfphV57x/V9O8Cq3FH6Lb32XuvNDnA07iv9kl57r/VZHeBo3Ff66ffWu6yv
0QE4VXn39fv22vurr9EBuEzlHtDv22vvsj6rA3Cbyj2gX9dr77I+qwPwMSp3
gn5dr73X+r4dgIbKnaBf1i9Ve/f1+3YA2mr3g76P2v2wagfg2Gr3xtE6ALCe
2r2xagcAqN0ntQ4AcC+1O8cdBQCsqnYXuaMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgT38Al66v+A==

     "], {{0, 100}, {100, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}], "==", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt2sFKw0AQgOFFLx59Bd/Cq0evFR+gpbH0EiEVxJf2FWLCFomUprO7Y3c2
+/9MQhLYw3znPGzeV283zrnD3XBbrT+fum799XI/vLy2h/2ubbbP7Ueza7rH
ze3wcXu8xmciIiIiIiIiIiIiIiIiUq7vxyFJWAnzUHBdbAoF13xYSTpVgutc
WAmbgYJr2kUorHwSKLhcCFTlVkFQNXNFQGEF13zRULVxJUJVY9W7ZKhCuFT2
rMFKaUmssPoTVvKwkmfLyjaX3pLL57JoZZXLqNXSuZStTIqZtjKGVoaVGbry
rPLpYXVNrsxQ17VKFKvQKpqrTqsIsfxQWa3kYvmVbFg5AVd+JTNWvuxQ/bc7
N6agfvs/qxkKydhMHSpRySyUTwsqXck4lFOyUoGqwUoLyr7VGFDyDFgVE1Dy
8lmVV5yVP1oVlFP4gXb5RNPSrOoKqKBQCgqooIAiIiIiIiIiIiIiIiIiMtAP
QN/ASQ==
     "], {{0, 100}, {100, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{100, 100},
   PlotRange->{{0, 100}, {0, 100}}]}]], "Input",
 CellChangeTimes->{{3.6793057402059703`*^9, 3.679305740863781*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.6793057370075707`*^9, 3.6793057413481536`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GDMapList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Most", "[", 
      RowBox[{"1", "-", "#"}], "]"}], "&"}], ",", 
    RowBox[{"GridDataMakeFromImage", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2j1KA1EUhuFBLSx1Ce7C1tI24gIiiWITIQri6sdEIkhQzN+dc+7Nc8Mb
SIph5nvauXp4GT2edF33er74Go3fb+bz8cfdxeLH/ez1+Wk2ndzO3qZP0/n1
w+niz8mqs0V930uSJEmSJEmSJEmSJEnSMC1fWfp6bSnBvYhHpr4tmMS3bsGE
h/52YMLj2NvEgkk+Cx65LJjks+CRy4JJPgse+TyY5LJgks+Cx051fSGLxk2W
u5X6FPZYP+vPts0JdyhtEeCxzwm34MGDBw8eA3kc1iTcYgiPikzCLZrxOIxJ
uEVTHvubhFsMZTKYx/4u4RZNeuxuE27RvMd2RuEWQ5iE77+5U7gDj5wepUzC
N67Yo4RL+MYNeBzSJHzjRjwO4RK+b4Meu7qEb9u4x7Ym4dsegcemLuG7/qi7
7P+tZotNXDJsvG3RW5Yyqc2hJYt1k9ocWrQo7VHSgkcui1Y9vmKRq8o8wveq
yIPFcXiEb1Sjx+p6LBJ4/HJdBoEm0fffWizyxSFfLPLFQpIkSZIkSZIkSZIk
SVJlfQI/rjj1
         "], {{0, 100}, {100, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{100, 100},
       PlotRange->{{0, 100}, {0, 100}}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "g", ",", "b"}], "}"}]}], "]"}], "//", 
  "GDToImage"}]], "Input",
 CellChangeTimes->{{3.67930525411874*^9, 3.6793052591387978`*^9}, {
  3.6793054675269504`*^9, 3.679305534217665*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDMapList\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"Most\\\", \\\"[\\\", RowBox[{\\\"1\\\", \
\\\"-\\\", \\\"#1\\\"}], \\\"]\\\"}], \\\"&\\\"}], \\\",\\\", \\\"Null\\\", \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"r\\\", \\\",\\\", \\\"g\\\", \
\\\",\\\", \\\"b\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. \
Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"GDToImage\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677664131827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToImage\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367766475683*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.6793047220720825`*^9, 3.6793047293459873`*^9}, 
   3.679304764427366*^9, 3.6793048496169777`*^9, 3.679304882779792*^9, {
   3.6793052009351006`*^9, 3.679305217104678*^9}, {3.6793054705138273`*^9, 
   3.6793054861963577`*^9}, {3.6793055277442417`*^9, 3.6793055345926785`*^9}, 
   3.680367766475683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"24", ",", "77"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "79"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_Integer", ",", "_Integer"}], "}"}], ".."}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.679305031089585*^9, 3.6793050407728615`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.679305041142194*^9, 3.680367766506934*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.6793044913880525`*^9, {3.679304714678364*^9, 3.679304733965192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "GridData`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GDMapList", "[", "\[IndentingNewLine]", 
  RowBox[{"Most", "\[IndentingNewLine]", ",", 
   RowBox[{"GDSelect", "[", 
    RowBox[{
     RowBox[{"GridDataMakeFromArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], " ", "}"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "~", "FMEvaluate", "~", "a"}], "==", "0"}], "&"}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "g", ",", "b"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6793043270935125`*^9, 3.679304337442621*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is \
undefined. Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"GDMapList\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677671371226`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDMapList\\\", \\\"[\\\", \
RowBox[{\\\"Most\\\", \\\",\\\", \\\"$Failed\\\", \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"r\\\", \\\",\\\", \\\"g\\\", \\\",\\\", \
\\\"b\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is undefined. Check \
argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"CompoundExpression\\\", \\\"}\\\"}]\
\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367767168369*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.679304323730216*^9, 3.6793043379429092`*^9}, 
   3.680367767168369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GDMapList", "[", "\[IndentingNewLine]", 
  RowBox[{"Most", ",", "\[IndentingNewLine]", 
   RowBox[{"GDSelect", "[", 
    RowBox[{
     RowBox[{"GridDataMakeFromArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}]}], " ", "}"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "~", "FMEvaluate", "~", "a"}], "==", "0"}], "&"}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.679303821963945*^9, 3.679303847523532*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"Null\\\", \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \
\\\"[\\\", RowBox[{\\\"#1\\\", \\\",\\\", \\\"a\\\"}], \\\"]\\\"}], \\\"\
\[Equal]\\\", \\\"0\\\"}], \\\"&\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is \
undefined. Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"GDMapList\\\", \\\",\\\", \
\\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.6803677672658825`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDMapList\\\", \\\"[\\\", \
RowBox[{\\\"Most\\\", \\\",\\\", \\\"$Failed\\\"}], \\\"]\\\"}]\\)\[NoBreak] \
is undefined. Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \\\"CompoundExpression\\\", \\\"}\\\"}]\
\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.680367767297135*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.6793038230736895`*^9, 3.6793038480265074`*^9}, 
   3.680367767297135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GDSelect", "[", 
   RowBox[{
    RowBox[{"GridDataMakeFromImage", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", "g", ",", "b", ",", "a"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}]}], " ", "}"}], 
       "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "~", "FMEvaluate", "~", "a"}], ">", "0"}], "&"}]}], "]"}],
   "//", "GDToArray"}]], "Input",
 CellChangeTimes->{{3.6793032348678417`*^9, 3.6793032773392625`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GridDataMakeFromImage\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"r\\\", \\\",\\\", \
\\\"g\\\", \\\",\\\", \\\"b\\\", \\\",\\\", \\\"a\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\
\\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\
\",\\\", \\\"1\\\", \\\",\\\", \\\"1\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\[NoBreak] is \
undefined. Check argument count and definition conditions. Stack: \
\[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"GDToArray\\\", \\\",\\\", \
\\\"GDSelect\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \\\"}\\\"}]\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677673440104`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDSelect\\\", \\\"[\\\", \
RowBox[{\\\"$Failed\\\", \\\",\\\", \
RowBox[{RowBox[{RowBox[{\\\"FMEvaluate\\\", \\\"[\\\", RowBox[{\\\"#1\\\", \\\
\",\\\", \\\"a\\\"}], \\\"]\\\"}], \\\">\\\", \\\"0\\\"}], \\\"&\\\"}]}], \
\\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count and definition \
conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"GDToArray\\\", \\\",\\\", \\\"CompoundExpression\\\"}], \
\\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677673908887`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "undefined"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"GDToArray\\\", \\\"[\\\", \
\\\"$Failed\\\", \\\"]\\\"}]\\)\[NoBreak] is undefined. Check argument count \
and definition conditions. Stack: \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"CompoundExpression\\\", \\\"}\\\"}]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68036776742214*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \\\"::\\\", \
\\\"undefined\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed \
during this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6803677674533715`*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.6793032283331175`*^9, 3.679303245857315*^9}, 
   3.6793034008538876`*^9, 3.6803677674533715`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1123, 702},
WindowMargins->{{325, Automatic}, {0, Automatic}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 109, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[714, 27, 2703, 63, 316, "Input"],
Cell[3420, 92, 638, 13, 31, "Output"],
Cell[4061, 107, 2875, 53, 138, "Output"],
Cell[6939, 162, 6936, 120, 125, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13924, 288, 114, 1, 90, "Title"],
Cell[CellGroupData[{
Cell[14063, 293, 241, 6, 31, "Input"],
Cell[14307, 301, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14441, 307, 1030, 24, 212, "Input"],
Cell[15474, 333, 171, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15682, 340, 716, 17, 152, "Input"],
Cell[16401, 359, 919, 27, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17357, 391, 452, 11, 92, "Input"],
Cell[17812, 404, 117, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17966, 411, 614, 15, 172, "Input"],
Cell[18583, 428, 485, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19105, 449, 637, 18, 92, "Input"],
Cell[19745, 469, 654, 22, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20436, 496, 605, 14, 172, "Input"],
Cell[21044, 512, 310, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21391, 526, 1287, 27, 212, "Input"],
Cell[22681, 555, 460, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23178, 571, 578, 13, 172, "Input"],
Cell[23759, 586, 360, 11, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24156, 602, 740, 19, 92, "Input"],
Cell[24899, 623, 708, 19, 31, "Output"],
Cell[25610, 644, 816, 24, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26463, 673, 146, 4, 31, "Input"],
Cell[26612, 679, 264, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26913, 691, 320, 9, 52, "Input"],
Cell[27236, 702, 293, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27566, 715, 119, 2, 52, "Input"],
Cell[27688, 719, 78, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27803, 725, 526, 11, 72, "Input"],
Cell[28332, 738, 495, 10, 22, "Message"],
Cell[28830, 750, 279, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29146, 759, 151, 2, 31, "Input"],
Cell[29300, 763, 502, 11, 22, "Message"],
Cell[29805, 776, 100, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29942, 782, 309, 8, 31, "Input"],
Cell[30254, 792, 457, 9, 22, "Message"],
Cell[30714, 803, 102, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30853, 809, 636, 16, 92, "Input"],
Cell[31492, 827, 500, 11, 22, "Message"],
Cell[31995, 840, 500, 11, 22, "Message"],
Cell[32498, 853, 183, 4, 31, "Output"]
}, Open  ]],
Cell[32696, 860, 1423, 39, 112, "Input"],
Cell[CellGroupData[{
Cell[34144, 903, 557, 14, 112, "Input"],
Cell[34704, 919, 656, 19, 31, "Output"],
Cell[35363, 940, 211, 6, 31, "Output"]
}, Open  ]],
Cell[35589, 949, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[35708, 954, 311, 9, 31, "Input"],
Cell[36022, 965, 1979, 69, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38038, 1039, 620, 16, 112, "Input"],
Cell[38661, 1057, 631, 12, 22, "Message"],
Cell[39295, 1071, 459, 9, 22, "Message"],
Cell[39757, 1082, 153, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39947, 1090, 922, 19, 52, "Input"],
Cell[40872, 1111, 638, 12, 22, "Message"],
Cell[41513, 1125, 461, 9, 22, "Message"],
Cell[41977, 1136, 453, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42467, 1147, 576, 15, 92, "Input"],
Cell[43046, 1164, 713, 13, 22, "Message"],
Cell[43762, 1179, 461, 9, 22, "Message"],
Cell[44226, 1190, 128, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44391, 1197, 373, 10, 31, "Input"],
Cell[44767, 1209, 366, 9, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45170, 1223, 749, 21, 52, "Input"],
Cell[45922, 1246, 702, 13, 22, "Message"],
Cell[46627, 1261, 500, 10, 22, "Message"],
Cell[47130, 1273, 78, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47245, 1279, 322, 8, 31, "Input"],
Cell[47570, 1289, 393, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48000, 1303, 252, 7, 31, "Input"],
Cell[48255, 1312, 369, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48661, 1326, 2067, 53, 232, "Input"],
Cell[50731, 1381, 698, 13, 22, "Message"],
Cell[51432, 1396, 496, 10, 22, "Message"],
Cell[51931, 1408, 737, 14, 22, "Message"],
Cell[52671, 1424, 566, 12, 22, "Message"],
Cell[53240, 1438, 254, 5, 31, "Output"]
}, Open  ]],
Cell[53509, 1446, 117, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[53651, 1452, 688, 16, 172, "Input"],
Cell[54342, 1470, 805, 14, 41, "Message"],
Cell[55150, 1486, 459, 9, 22, "Message"],
Cell[55612, 1497, 128, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55777, 1504, 1017, 21, 67, "Input"],
Cell[56797, 1527, 95, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56929, 1533, 2553, 59, 396, "Input"],
Cell[59485, 1594, 530, 11, 22, "Message"],
Cell[60018, 1607, 733, 14, 41, "Message"],
Cell[60754, 1623, 539, 11, 22, "Message"],
Cell[61296, 1636, 567, 12, 22, "Message"],
Cell[61866, 1650, 266, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62169, 1661, 2649, 48, 67, "Input"],
Cell[64821, 1711, 2628, 48, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67486, 1764, 111, 1, 31, "Input"],
Cell[67600, 1767, 86, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67723, 1773, 1063, 22, 67, "Input"],
Cell[68789, 1797, 883, 19, 115, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69709, 1821, 2428, 58, 392, "Input"],
Cell[72140, 1881, 526, 11, 22, "Message"],
Cell[72669, 1894, 735, 14, 41, "Message"],
Cell[73407, 1910, 539, 11, 22, "Message"],
Cell[73949, 1923, 567, 12, 22, "Message"],
Cell[74519, 1937, 506, 10, 22, "Message"],
Cell[75028, 1949, 506, 10, 22, "Message"],
Cell[75537, 1961, 449, 9, 52, "Output"]
}, Open  ]],
Cell[76001, 1973, 117, 2, 31, "Input"],
Cell[76121, 1977, 148, 2, 31, "Input"],
Cell[76272, 1981, 276, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[76573, 1989, 2705, 59, 254, "Input"],
Cell[79281, 2050, 788, 14, 41, "Message"],
Cell[80072, 2066, 513, 10, 22, "Message"],
Cell[80588, 2078, 1024, 22, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81649, 2105, 1493, 29, 67, "Input"],
Cell[83145, 2136, 100, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83282, 2142, 952, 20, 67, "Input"],
Cell[84237, 2164, 123, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84397, 2171, 2414, 49, 91, "Input"],
Cell[86814, 2222, 123, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86974, 2229, 1539, 31, 67, "Input"],
Cell[88516, 2262, 439, 9, 22, "Message"],
Cell[88958, 2273, 7723, 200, 89, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96718, 2478, 2299, 47, 67, "Input"],
Cell[99020, 2527, 102, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99159, 2533, 1463, 34, 67, "Input"],
Cell[100625, 2569, 748, 14, 22, "Message"],
Cell[101376, 2585, 459, 9, 22, "Message"],
Cell[101838, 2596, 358, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102233, 2606, 424, 14, 31, "Input"],
Cell[102660, 2622, 95, 1, 31, "Output"]
}, Open  ]],
Cell[102770, 2626, 119, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[102914, 2632, 988, 26, 132, "Input"],
Cell[103905, 2660, 682, 13, 22, "Message"],
Cell[104590, 2675, 608, 12, 22, "Message"],
Cell[105201, 2689, 128, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105366, 2696, 817, 21, 92, "Input"],
Cell[106186, 2719, 682, 13, 22, "Message"],
Cell[106871, 2734, 496, 10, 22, "Message"],
Cell[107370, 2746, 130, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107537, 2753, 703, 20, 31, "Input"],
Cell[108243, 2775, 1004, 17, 41, "Message"],
Cell[109250, 2794, 678, 13, 22, "Message"],
Cell[109931, 2809, 458, 9, 22, "Message"],
Cell[110392, 2820, 569, 12, 22, "Message"],
Cell[110964, 2834, 154, 2, 31, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

